// esbuild.config.mjs
import { build, context } from 'esbuild'
import copy from 'esbuild-plugin-copy'
import { htmlPlugin } from '@craftamap/esbuild-plugin-html'
import { resolve, readFileSync, writeFileSync, mkdirSync } from 'fs'

// –û—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ --watch –∫–∞–∫ ¬´dev¬ª
// eslint-disable-next-line no-undef
const isDev = process.argv.includes('--watch')
const outdir = 'dist'
mkdirSync(outdir, { recursive: true })

const common = {
    entryPoints: { code: 'src/code.tsx', ui: 'src/ui.tsx' },
    bundle: true,
    platform: 'browser',
    format: 'cjs',

    target: 'es2020',
    sourcemap: isDev ? 'inline' : false,
    minify: !isDev,
    outdir,
    plugins: [
        // –≤–∞—à–∏ –ø–ª–∞–≥–∏–Ω—ã html & copy‚Ä¶
        htmlPlugin({
            /* ‚Ä¶ */
        }),
        copy({
            /* ‚Ä¶ */
        }),
    ],
}

if (isDev) {
    const ctx = await context(common)
    await ctx.watch()
    console.log('üöÄ watching‚Ä¶')
} else {
    await build(common)
    console.log('‚úÖ build done')
}

// –¥–ª—è Figma: —Å—Ç–∞–≤–∏–º global = {} –≤ –Ω–∞—á–∞–ª–æ code.js
const text = readFileSync(resolve(outdir, 'code.js'), 'utf8')
writeFileSync(resolve(outdir, 'code.js'), 'var global={};\n' + text)
